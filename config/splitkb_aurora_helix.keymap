/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define NUMBER  1
#define SYMBOL  2
#define CONFIG  3

/* Uncomment this block if using RGB */
&led_strip {
  // chain-length = <6>; // Uncomment if using only underglow LEDs
  chain-length = <38>; // Uncomment if using both per-key and underglow LEDs
  // chain-length = <32>; // Uncomment if using only per-key LEDs.
};

&sensors {
  triggers-per-rotation = <72>;
};

/ {
  conditional_layers {
    compatible = "zmk,conditional-layers";
    tri_layer {
      if-layers = <1 2>;
      then-layer = <3>;
    };
  };
  macros {
    // compose + o in dvorak
    overring: overring {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings = <&kp RALT &kp S>;
    };
    // compose + " in dvorak
    umlaut: umlaut {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings = <&kp RALT &kp LS(Q)>;
    };
    // compose + / in dvorak
    solidus: solidus {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings = <&kp RALT &kp LBKT>;
    };
    // compose + ~ in dvorak
    perispomene: perispomene {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings = <&kp RALT &kp LS(GRAVE)>;
    };
    // compose + ' + ' in dvorak
    acute: acute {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings = <&kp RALT &kp Q &kp Q>;
    };
    // compose + ` in dvorak
    grave_acc: grave_acc {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings = <&kp RALT &kp GRAVE>;
    };
    // compose + ' in dvorak
    acute_acc: acute_acc {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings = <&kp RALT &kp Q>;
    };
    // compose + ^ in dvorak
    circumflex: circumflex {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings = <&kp RALT &kp LS(N6)>;
    };
  };
  keymap {
    compatible = "zmk,keymap";

    default_layer {
      display-name = "default";

      // ---------------------------------------------------------------------------------------------------------------------------------
      // |   F1   |   F2   |   F3   |   F4   |   F5   |   F6   |                        |   F7  |   F8   |   F9   |  F10   |  F11   |  F12   |
      // |  ESC   |   Q    |   W    |   E    |   R    |   T    |                        |   Y   |   U    |   I    |   O    |   P    |  INS   |
      // |  TAB   |   A    |   S    |   D    |   F    |   G    |                        |   H   |   J    |   K    |   L    |   ;    |   "    |
      // | SHIFT  |   Z    |   X    |   C    |   V    |   B    |  MB1   |      |  MB2   |   N   |   M    |   ,    |   .    |   /    | RSHIFT |
      // | LCTRL  |  LALT  |  LGUI  | NUMBER |  BSPC  | SPACE  |  DEL   |      |  PLAY  | SPACE |  RET   | SYMBOL |  RGUI  |  RALT  | RCTRL  |
      bindings = <
        &kp F1    &kp F2   &kp F3   &kp F4     &kp F5   &kp F6                           &kp F7    &kp F8  &kp F9     &kp F10    &kp F11   &kp F12
        &kp ESC   &kp Q    &kp W    &kp E      &kp R    &kp T                            &kp Y     &kp U   &kp I      &kp O      &kp P     &kp BSPC
        &kp TAB   &kp A    &kp S    &kp D      &kp F    &kp G                            &kp H     &kp J   &kp K      &kp L      &kp SEMI  &kp SQT
        &kp LSHFT &kp Z    &kp X    &kp C      &kp V    &kp B     &kp C_MUTE  &kp K_LOCK &kp N     &kp M   &kp COMMA  &kp PERIOD &kp SLASH &kp RET
        &kp LCTRL &kp LALT &kp LGUI &mo NUMBER &kp BSPC &kp SPACE &kp DEL     &kp TILDE  &kp SPACE &kp RET &mo SYMBOL &kp RGUI   &kp RALT  &kp RCTRL
      >;
      // Encoders, probably in the order of left, right
      sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN   &inc_dec_kp UP DOWN>;
    };

    number_layer {
      display-name = "number";

      // ---------------------------------------------------------------------------------------------------------------------------------
      // | RGB_TOG|        | BT_PRV | BT_CLR | BT_NXT |       |                         |       |        |        |        |        |        |
      // | RGB_BRI|   N1   |   N2   |   N3   |   N4   |   N5  |                         |   N6  |   N7   |   N8   |   N9   |   N0   |        |
      // | RGB_BRD|        | mPrev  |  mPlay | mNext  | PRTSCR|                         |  INS  |  LEFT  |   UP   |  DOWN  | RIGHT  |        |
      // |   F1   |   F2   |   F3   |   F4   |   F5   |   F6  | K_MUTE2 |      |        |   F7  |   F8   |   F9   |   F10  |   F11  |  F12   |
      // |        |        |        |        |        |       |         |      |        |       |        |        |        |        |        |
      bindings = <
        &trans  &trans  &trans     &trans   &trans     &trans                        &trans   &trans    &trans  &trans    &trans     &trans
        &trans  &kp N1  &kp N2     &kp N3   &kp N4     &kp N5                        &kp N6   &kp N7    &kp N8  &kp N9    &kp N0     &trans
        &trans  &trans  &kp C_PREV &kp C_PP &kp C_NEXT &kp PSCRN                     &kp INS  &kp LEFT  &kp UP  &kp DOWN  &kp RIGHT  &trans
        &kp F1  &kp F2  &kp F3     &kp F4   &kp F5     &kp F6    &trans      &trans  &kp F7   &kp F8    &kp F9  &kp F10   &kp F11    &kp F12
        &trans  &trans  &trans     &trans   &trans     &trans    &trans      &trans  &trans   &trans    &trans  &trans    &trans     &trans
      >;
      sensor-bindings = <&inc_dec_kp C_BRI_INC C_BRI_DN   &inc_dec_kp PG_UP PG_DN>;
    };

    symbol_layer {
      display-name = "symbol";

      // ---------------------------------------------------------------------------------------------------------------------------------
      // |        |        |        |        |        |       |                        |       |        |        |        |        |        |
      // |        |   !    |   @    |   #    |   $    |   %   |                        |   ^   |   &    |   *    |   (    |   )    |        |
      // |   ?    |   [    |   ]    |   {    |   }    |   |   |                        | tilde |   c_o  |   c_"  |   c_/  |   c_~  |        | (overring, umlaut, solidus, perispomene)
      // |   _    |   -    |   +    |   =    |   /    |   \   |         |      |       | grave |  c_'_' |   c_`  |   c_'  |   c_^  |        | (acute, grave_acc, acute_acc, circumflex)
      // |        |        |        |        |        |       |         |      |       |       |        |        |        |        |        |
      bindings = <
        &trans       &trans     &trans       &trans        &trans        &trans                       &trans        &trans     &trans     &trans     &trans       &trans
        &trans       &kp LS(N1) &kp LS(N2)   &kp LS(N3)    &kp LS(N4)    &kp LS(N5)                   &kp LS(N6)    &kp LS(N7) &kp LS(N8) &kp LS(N9) &kp LS(N0)   &trans
        &kp LS(LBKT) &kp MINUS  &kp EQUAL    &kp LS(MINUS) &kp LS(EQUAL) &kp LS(BSLH)                 &kp LS(GRAVE) &overring  &umlaut    &solidus   &perispomene &trans
        &kp LS(SQT)  &kp SQT    &kp LS(RBKT) &kp RBKT      &kp LBKT      &kp BSLH     &trans  &trans  &kp GRAVE     &acute     &grave_acc &acute_acc &circumflex  &trans
        &trans       &trans     &trans       &trans        &trans        &trans       &trans  &trans  &trans        &trans     &trans     &trans     &trans       &trans
      >;
    };

    config_layer {
      display-name = "conf";

      // ---------------------------------------------------------------------------------------------------------------------------------
      // |        |        |        | BT_CLR |        |       |                         |       |        |        |        |        |        |
      // |        |        |        |        |        |       |                         |       | RGB_SAI| RGB_BRI| RGB_SPI| RGB_EFF|        |
      // |        |        | BT_PRV | OUT_TOG| BT_NXT |       |                         |       | RGB_HUD| RGB_ON | RGB_OFF| RGB_HUI|        |
      // |        |        |        |        |        |       |         |      |        |       | RGB_SAD| RGB_BRD| RGB_SPD| RGB_EFR|        |
      // |        |        |        |        |        |       |         |      |        |       |        |        |        |        |        |
      bindings = <
        &none  &none  &none      &bt BT_CLR   &none      &none                     &none   &none           &none           &none           &none           &none
        &none  &none  &none      &none        &none      &none                     &none   &rgb_ug RGB_SAI &rgb_ug RGB_BRI &rgb_ug RGB_SPI &rgb_ug RGB_EFF &none
        &none  &none  &bt BT_PRV &out OUT_TOG &bt BT_NXT &none                     &none   &rgb_ug RGB_HUD &rgb_ug RGB_ON  &rgb_ug RGB_OFF &rgb_ug RGB_HUI &none
        &none  &none  &none      &none        &none      &none    &none    &none   &none   &rgb_ug RGB_SAD &rgb_ug RGB_BRD &rgb_ug RGB_SPD &rgb_ug RGB_EFR &none
        &none  &none  &none      &trans       &none      &none    &none    &none   &none   &none           &trans          &none           &none           &none
      >;
    };
  };
};
